% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_dye_screen_model_plots.R
\name{join_with_preds}
\alias{join_with_preds}
\title{Combine raw and modeled data}
\usage{
join_with_preds(
  tidied_for_tmas,
  by_var_fit,
  .join_by = ".var",
  .var_col = ".var",
  .model_name_col = "model_name",
  .fit_data_col = "data",
  .tidied_data_col = "data",
  .temp_col_raw = "Temperature",
  .value_norm_col_raw = "value_norm",
  .value_col_pred = "value",
  .keep_cols_from_raw = c("Temperature_norm", "value_norm"),
  .rescale_raw_temps = FALSE,
  ...
)
}
\arguments{
\item{tidied_for_tmas}{a grouped, nested tibble, as returned by \code{tidy_for_tmas}}

\item{by_var_fit}{a grouped, nested tibble, as returned by \code{add_model_fits}}

\item{.join_by}{a string, giving the name of the column shared between \code{tidied_for_tmas} and \code{by_var_fit}, by which data can be mapped between the two. Should be renamed, since the final combination of the tibbles is done with bind_rows(), not join_by(). Defaults to ".var".}

\item{.var_col}{a string, giving the name of the column shared between \code{tidied_for_tmas} and \code{by_var_fit}, which uniquely identifies each individual dataset. Defaults to ".var".}

\item{.model_name_col}{a string, giving the name of the column in which the fitted model is specified by name (e.g. "model_1", "model_2" . . . ). Defaults to "model_name".}

\item{.fit_data_col}{a string, giving the name of the column in \code{by_var_fit} containing nested tibbles of fitted data. Defaults to "data",.}

\item{.tidied_data_col}{a string, giving the name of the column in \code{tidied_for_tmas} containing nested tibbles of raw data. Defaults to "data".}

\item{.temp_col_raw}{a string, giving the name of the columns shared between \code{tidied_for_tmas} and \code{by_var_fit}, containing raw Temperatures. Defaults to "Temperature}

\item{.value_norm_col_raw}{a string, giving the name of the column in \code{tidied_for_tmas} containing normalized RFU data.}

\item{.value_col_pred}{a string, giving the name of the column in \code{by_var_fit} containing predicted and reconstructed values. Defaults to "value"}

\item{.keep_cols_from_raw}{a character vector, containing names of the columns to be carried through into the final output tibble from \code{tidied_for_tmas}. Defaults to c("Temperature_norm", "value_norm").}

\item{.rescale_raw_temps}{a boolean, defaults to FALSE, giving whether or not the supplied column name to \code{.temp_col_raw} should be normalized in a 0 to 1 range to match the always-normalized Temperature_norm used in fitting.}

\item{...}{additional arguments, not passed to anything internal here, but allows for the function to recieve named arguments from upstream functions while ignoring arguments passed with ... which match nothing in this function.}
}
\value{
a tibble of five columns
\itemize{
\item \strong{.var} character, giving the unique dataset identifier for each DSF trace.
\item \strong{Temperature_norm} numeric, giving the normalized Temperature for a given value
\item \strong{value} numeric, giving either the normalized raw RFU, a prediction from a fitted model to that normalized raw data, or individual component extract from the model prediction.
\item \strong{which_value} character, describing which of the possible values types corresponding to a given value in the \code{value} column. e.g. "raw" (normalized raw RFU), "pred" (full model prediction), "resid" (residuals from the model prediction)
\item \strong{model_name} character, giving the name of the model which was fit, and from which the predictions have been extracted. e.g. "model_1", "model_2" ... For the rows corresponding to raw data, modle_name is NA.
}
}
\description{
Use \code{join_with_preds} to combine raw data with the values predicted by a given model fit.
}
